

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>Hinting at Future Behavior: the will-change property - CSS Will Change Module Level 1 CR Test Suite</title>
  <style type="text/css">
    @import "http://www.w3.org/StyleSheets/TR/base.css";
    @import "../indices.css";
  </style>
 </head>

 <body>

  <h1>CSS Will Change Module Level 1 CR Test Suite</h1>
  <h2>Hinting at Future Behavior: the will-change property (19 tests)</h2>
  <table width="100%">
    <col id="test-column"></col>
    <col id="refs-column"></col>
    <col id="flags-column"></col>
    <col id="info-column"></col>
    <thead>
      <tr>
        <th>Test</th>
        <th><abbr title="Rendering References">Refs</abbr></th>
        <th>Flags</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody id="s2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s2">+</a>
        <a href="https://www.w3.org/TR/css-will-change-1/#will-change">2 Hinting at Future Behavior: the will-change property</a></th></tr>
      <!-- 19 tests -->
      <tr id="will-change-fixpos-cb-contain-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-contain-1.xht">will-change-fixpos-cb-contain-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: contain' creates a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-filter-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-filter-1.xht">will-change-fixpos-cb-filter-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: filter' creates a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-height-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-height-1.xht">will-change-fixpos-cb-height-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: height' does not create a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-perspective-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-perspective-1.xht">will-change-fixpos-cb-perspective-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: perspective' creates a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-position-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-position-1.xht">will-change-fixpos-cb-position-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: position' does not create a containing block for fixed positioned elements but does create a containing block for absolutely positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-transform-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-transform-1.xht">will-change-fixpos-cb-transform-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: transform' creates a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-fixpos-cb-transform-style-1-2" class="primary">
        <td><strong>
            <a href="will-change-fixpos-cb-transform-style-1.xht">will-change-fixpos-cb-transform-style-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-offset-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: transform-style' creates a containing block for fixed positioned elements
          <ul class="assert">
            <li>If any non-initial value of a property would cause the element to generate a containing block for fixed-position elements, specifying that property in will-change must cause the element to generate a containing block for fixed-position elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-clip-path-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-clip-path-1.xht">will-change-stacking-context-clip-path-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: clip-path' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-filter-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-filter-1.xht">will-change-stacking-context-filter-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: filter' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-height-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-height-1.xht">will-change-stacking-context-height-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: height' does not create a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-isolation-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-isolation-1.xht">will-change-stacking-context-isolation-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: isolation' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-mask-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-mask-1.xht">will-change-stacking-context-mask-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: mask' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-mix-blend-mode-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-mix-blend-mode-1.xht">will-change-stacking-context-mix-blend-mode-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: mix-blend-mode' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-opacity-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-opacity-1.xht">will-change-stacking-context-opacity-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: opacity' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-perspective-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-perspective-1.xht">will-change-stacking-context-perspective-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: perspective' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-position-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-position-1.xht">will-change-stacking-context-position-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: position' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-transform-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-transform-1.xht">will-change-stacking-context-transform-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: transform' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-transform-style-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-transform-style-1.xht">will-change-stacking-context-transform-style-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: transform-style' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="will-change-stacking-context-z-index-1-2" class="primary">
        <td><strong>
            <a href="will-change-stacking-context-z-index-1.xht">will-change-stacking-context-z-index-1</a></strong></td>
        <td><a href="reference/green-square-100-by-100-ref.xht">=</a> </td>
        <td></td>
        <td>CSS will-change: 'will-change: z-index' creates a stacking context
          <ul class="assert">
            <li>If any non-initial value of a property would create a stacking context on the element, specifying that property in will-change must create a stacking context on the element.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s2.#example-0925a526">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#example-11850f13">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#example-3a61cc96">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#example-cd991592">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#example-f071a487">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#propdef-will-change">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#typedef-animateable-feature">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#valdef-will-change-auto">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#valdef-will-change-contents">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#valdef-will-change-custom-ident">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s2.#valdef-will-change-scroll-position">
      <!-- 0 tests -->
    </tbody>
  </table>

 </body>
</html>