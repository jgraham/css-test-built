

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>Introduction to Vertical Text - CSS Writing Modes Module Level 3 CR Test Suite</title>
  <style type="text/css">
    @import "http://www.w3.org/StyleSheets/TR/base.css";
    @import "../indices.css";
  </style>
 </head>

 <body>

  <h1>CSS Writing Modes Module Level 3 CR Test Suite</h1>
  <h2>Introduction to Vertical Text (19 tests)</h2>
  <table width="100%">
    <col id="test-column"></col>
    <col id="refs-column"></col>
    <col id="flags-column"></col>
    <col id="info-column"></col>
    <thead>
      <tr>
        <th>Test</th>
        <th><abbr title="Rendering References">Refs</abbr></th>
        <th>Flags</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody id="s3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s3">+</a>
        <a href="http://www.w3.org/TR/css-writing-modes-3/#vertical-intro">3 Introduction to Vertical Text</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.#fig-mac">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s3.1">+</a>
        <a href="http://www.w3.org/TR/css-writing-modes-3/#block-flow">3.1 Block Flow Direction: the writing-mode property</a></th></tr>
      <!-- 4 tests -->
      <tr id="block-flow-direction-vrl-026-3.1" class="primary ahem">
        <td><strong>
            <a href="block-flow-direction-vrl-026.xht">block-flow-direction-vrl-026</a></strong></td>
        <td><a href="reference/block-flow-direction-vrl-026-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>vertical-rl - block flow direction of block-level boxes
          <ul class="assert">
            <li>This test checks 1.block flow direction, 2.inline direction when 'writing-mode' is set to 'vertical-rl'.</li>
          </ul>
        </td>
      </tr>
      <tr id="writing-mode-parsing-001-3.1" class="primary dom script">
        <td><strong>
            <a href="writing-mode-parsing-001.xht">writing-mode-parsing-001</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="script" title="Executes tests in script">Script</abbr></td>
        <td>CSS Writing Modes: parsing writing-mode
          <ul class="assert">
            <li>This test asserts the parser and getComputedStyle works correctly for the writing-mode property.</li>
          </ul>
        </td>
      </tr>
      <tr id="writing-mode-parsing-sideways-lr-001-3.1" class="primary dom script">
        <td><strong>
            <a href="writing-mode-parsing-sideways-lr-001.xht">writing-mode-parsing-sideways-lr-001</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="script" title="Executes tests in script">Script</abbr></td>
        <td>CSS Writing Modes: parsing writing-mode: sideways-lr
          <ul class="assert">
            <li>This test asserts the parser and getComputedStyle works correctly for the writing-mode: sideways-lr.</li>
          </ul>
        </td>
      </tr>
      <tr id="writing-mode-parsing-sideways-rl-001-3.1" class="primary dom script">
        <td><strong>
            <a href="writing-mode-parsing-sideways-rl-001.xht">writing-mode-parsing-sideways-rl-001</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="script" title="Executes tests in script">Script</abbr></td>
        <td>CSS Writing Modes: parsing writing-mode: sideways-rl
          <ul class="assert">
            <li>This test asserts the parser and getComputedStyle works correctly for the writing-mode: sideways-rl.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s3.1.#embedded-svg-inheritance">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#example-10a48cdc">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#example-18096584">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#example-9e085a32">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#propdef-writing-mode">
      <!-- 14 tests -->
      <tr id="autoheight-regions-in-autoheight-flexbox-002-3.1.#propdef-writing-mode" class="ahem">
        <td>
            <a href="autoheight-regions-in-autoheight-flexbox-002.xht">autoheight-regions-in-autoheight-flexbox-002</a></td>
        <td><a href="reference/autoheight-regions-in-autoheight-flexbox-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Regions: Auto-height regions with vertical writing mode in auto-height flexbox
          <ul class="assert">
            <li>Test checks that auto-height regions having content with vertical writing mode are sized correctly when placed inside a flex container. The flowed content should be displayed as a horizontal green stripe.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row.xht">css-flexbox-row</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-reverse-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row-reverse.xht">css-flexbox-row-reverse</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row-reverse, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-reverse-wrap-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row-reverse-wrap.xht">css-flexbox-row-reverse-wrap</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row-reverse wrap, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-reverse-wrap-reverse-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row-reverse-wrap-reverse.xht">css-flexbox-row-reverse-wrap-reverse</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row-reverse wrap-reverse, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-wrap-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row-wrap.xht">css-flexbox-row-wrap</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row wrap, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="css-flexbox-row-wrap-reverse-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="css-flexbox-row-wrap-reverse.xht">css-flexbox-row-wrap-reverse</a></td>
        <td><a href="reference/css-flexbox-row-ref.xht">=</a> </td>
        <td></td>
        <td>flex direction: row, writing mode vertical
          <ul class="assert">
            <li>Test checks that when writing mode is vertical and flex-flow: row wrap-reverse, the flex container is vertical.</li>
          </ul>
        </td>
      </tr>
      <tr id="extract-ordered-list-direction-and-writing-modes-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="extract-ordered-list-direction-and-writing-modes.xht">extract-ordered-list-direction-and-writing-modes</a></td>
        <td><a href="reference/extract-ordered-list-direction-and-writing-modes-ref.xht">=</a> </td>
        <td></td>
        <td>flow-into on list items that use different text directions or writing modes
          <ul class="assert">
            <li>The flow-into property can be applied to elements that have different text directions and writing modes. This tests that the rendering for lists that use different text directions/writing modes are not affected when they are extracted in a named flow and rendered in a region.</li>
          </ul>
        </td>
      </tr>
      <tr id="flexbox-writing-mode-007-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="flexbox-writing-mode-007.xht">flexbox-writing-mode-007</a></td>
        <td><a href="reference/flexbox-writing-mode-007-ref.xht">=</a> </td>
        <td></td>
        <td>Verify that explicit sizes are honored on flex items whose writing-mode may differ from the flex container's writing-mode
        </td>
      </tr>
      <tr id="flexbox-writing-mode-008-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="flexbox-writing-mode-008.xht">flexbox-writing-mode-008</a></td>
        <td><a href="reference/flexbox-writing-mode-008-ref.xht">=</a> </td>
        <td></td>
        <td>Verify that explicit sizes are honored on flex items whose writing-mode may differ from the flex container's writing-mode
        </td>
      </tr>
      <tr id="flexbox-writing-mode-009-3.1.#propdef-writing-mode" class="">
        <td>
            <a href="flexbox-writing-mode-009.xht">flexbox-writing-mode-009</a></td>
        <td><a href="reference/flexbox-writing-mode-009-ref.xht">=</a> </td>
        <td></td>
        <td>Verify that explicit sizes are honored on flex items whose writing-mode may differ from the flex container's writing-mode
        </td>
      </tr>
      <tr id="writing-mode-vertical-lr-002-3.1.#propdef-writing-mode" class="primary ahem">
        <td><strong>
            <a href="writing-mode-vertical-lr-002.xht">writing-mode-vertical-lr-002</a></strong></td>
        <td><a href="reference/writing-mode-vertical-lr-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>writing-mode: vertical-lr - basic inline case
        </td>
      </tr>
      <tr id="writing-mode-vertical-rl-001-3.1.#propdef-writing-mode" class="primary ahem">
        <td><strong>
            <a href="writing-mode-vertical-rl-001.xht">writing-mode-vertical-rl-001</a></strong></td>
        <td><a href="reference/writing-mode-vertical-rl-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>writing-mode: vertical-rl - basic inline case
        </td>
      </tr>
      <tr id="writing-mode-vertical-rl-002-3.1.#propdef-writing-mode" class="primary ahem">
        <td><strong>
            <a href="writing-mode-vertical-rl-002.xht">writing-mode-vertical-rl-002</a></strong></td>
        <td><a href="reference/writing-mode-vertical-rl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>writing-mode: vertical-rl - basic inline case
        </td>
      </tr>
    </tbody>
    <tbody id="s3.1.#valdef-writing-mode-horizontal-tb">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#valdef-writing-mode-sideways-lr">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#valdef-writing-mode-sideways-rl">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#valdef-writing-mode-vertical-lr">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.#valdef-writing-mode-vertical-rl">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s3.1.1">+</a>
        <a href="http://www.w3.org/TR/css-writing-modes-3/#svg-writing-mode">3.1.1 Obsolete SVG1.1 writing-mode Values</a></th></tr>
      <!-- 1 tests -->
      <tr id="writing-mode-parsing-svg1-001-3.1.1" class="primary dom may svg script">
        <td><strong>
            <a href="writing-mode-parsing-svg1-001.xht">writing-mode-parsing-svg1-001</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr><abbr class="svg" title="Requires SVG support">SVG</abbr><abbr class="script" title="Executes tests in script">Script</abbr></td>
        <td>CSS Writing Modes: parsing SVG 1.1 writing-mode values
          <ul class="assert">
            <li>This test asserts the parser and getComputedStyle works correctly for the SVG 1.1 writing-mode values.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s3.1.1.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s3.1.1.1">+</a>
        <a href="http://www.w3.org/TR/css-writing-modes-3/#svg-writing-mode-css">3.1.1.1 Supporting SVG1.1 writing-mode values in CSS syntax</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s3.1.1.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s3.1.1.2">+</a>
        <a href="http://www.w3.org/TR/css-writing-modes-3/#svg-writing-mode-markup">3.1.1.2 Supporting SVG1.1 writing-mode values in presentational attributes</a></th></tr>
      <!-- 0 tests -->
    </tbody>
  </table>

 </body>
</html>